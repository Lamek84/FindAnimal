// <auto-generated />
using System;
using System.Collections.Generic;
using FindAnimal.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FindAnimal.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240824055411_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FindAnimal.Domain.SpeciesAggregate.Entities.Breed", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("breed_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<Guid?>("species_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("species_id");

                    b.HasKey("Id")
                        .HasName("pk_tbl_breeds");

                    b.HasIndex("species_Id")
                        .HasDatabaseName("ix_tbl_breeds_species_id");

                    b.ToTable("tbl_breeds", (string)null);
                });

            modelBuilder.Entity("FindAnimal.Domain.SpeciesAggregate.Entities.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_tbl_species");

                    b.ToTable("tbl_species", (string)null);
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("color");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<double>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("height");

                    b.Property<string>("HelpStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("help_status");

                    b.Property<string>("HelthInformation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("helth_information");

                    b.Property<bool>("IsCastrated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_castrated");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("boolean")
                        .HasColumnName("is_vaccinated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<double>("Weigth")
                        .HasColumnType("double precision")
                        .HasColumnName("weigth");

                    b.Property<Guid?>("volunteer_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("volunteer_id");

                    b.ComplexProperty<Dictionary<string, object>>("AnimalType", "FindAnimal.Domain.VolunteerAggregate.Entities.Pet.AnimalType#SpeciesBreedType", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("BreedId")
                                .HasColumnType("uuid")
                                .HasColumnName("breed_Id");

                            b1.Property<Guid>("SpeciesId")
                                .HasColumnType("uuid")
                                .HasColumnName("species_Id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ContactNumber", "FindAnimal.Domain.VolunteerAggregate.Entities.Pet.ContactNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("contact_number_value");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("LocationAddress", "FindAnimal.Domain.VolunteerAggregate.Entities.Pet.LocationAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("location_address_city");

                            b1.Property<string>("HouseNumber")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("location_address_house_number");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("location_address_state");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("location_address_street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("location_address_zip_code");
                        });

                    b.HasKey("Id")
                        .HasName("pk_tbl_pets");

                    b.HasIndex("volunteer_Id")
                        .HasDatabaseName("ix_tbl_pets_volunteer_id");

                    b.ToTable("tbl_pets", (string)null);
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.PetPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("path");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.Property<Guid?>("photos_Id")
                        .HasColumnType("uuid")
                        .HasColumnName("photos_id");

                    b.HasKey("Id")
                        .HasName("pk_tbl_petphotos");

                    b.HasIndex("photos_Id")
                        .HasDatabaseName("ix_tbl_petphotos_photos_id");

                    b.ToTable("tbl_petphotos", (string)null);
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("integer")
                        .HasColumnName("years_of_experience");

                    b.ComplexProperty<Dictionary<string, object>>("PersonFullName", "FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer.PersonFullName#PersonFullName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("person_full_name_first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("person_full_name_last_name");

                            b1.Property<string>("Patronymic")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("person_full_name_patronymic");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Phone", "FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer.Phone#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("phone_value");
                        });

                    b.HasKey("Id")
                        .HasName("pk_tbl_volunteers");

                    b.ToTable("tbl_volunteers", (string)null);
                });

            modelBuilder.Entity("FindAnimal.Domain.SpeciesAggregate.Entities.Breed", b =>
                {
                    b.HasOne("FindAnimal.Domain.SpeciesAggregate.Entities.Species", null)
                        .WithMany("Breeds")
                        .HasForeignKey("species_Id")
                        .HasConstraintName("fk_tbl_breeds_tbl_species_species_id");
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Pet", b =>
                {
                    b.HasOne("FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer", null)
                        .WithMany("Pets")
                        .HasForeignKey("volunteer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_tbl_pets_tbl_volunteers_volunteer_id");

                    b.OwnsOne("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.CredentialList", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uuid");

                            b1.HasKey("PetId")
                                .HasName("pk_tbl_pets");

                            b1.ToTable("tbl_pets");

                            b1.ToJson("credentials");

                            b1.WithOwner()
                                .HasForeignKey("PetId")
                                .HasConstraintName("fk_tbl_pets_tbl_pets_pet_id");

                            b1.OwnsMany("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.Credential", "CredentialsList", b2 =>
                                {
                                    b2.Property<Guid>("CredentialListPetId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasMaxLength(500)
                                        .HasColumnType("character varying(500)");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("CredentialListPetId", "Id");

                                    b2.ToTable("tbl_pets");

                                    b2.ToJson("credentials");

                                    b2.WithOwner()
                                        .HasForeignKey("CredentialListPetId")
                                        .HasConstraintName("fk_tbl_pets_tbl_pets_credential_list_pet_id");
                                });

                            b1.Navigation("CredentialsList");
                        });

                    b.Navigation("Credentials")
                        .IsRequired();
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.PetPhoto", b =>
                {
                    b.HasOne("FindAnimal.Domain.VolunteerAggregate.Entities.Pet", null)
                        .WithMany("Photos")
                        .HasForeignKey("photos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_tbl_petphotos_tbl_pets_photos_id");
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer", b =>
                {
                    b.OwnsOne("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.SocialNetworkList", "SocialNetworks", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("tbl_volunteers");

                            b1.ToJson("social_networks");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_tbl_volunteers_tbl_volunteers_id");

                            b1.OwnsMany("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.SocialNetwork", "NetworksList", b2 =>
                                {
                                    b2.Property<Guid>("SocialNetworkListVolunteerId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Link")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("SocialNetworkListVolunteerId", "Id");

                                    b2.ToTable("tbl_volunteers");

                                    b2.ToJson("social_networks");

                                    b2.WithOwner()
                                        .HasForeignKey("SocialNetworkListVolunteerId")
                                        .HasConstraintName("fk_tbl_volunteers_tbl_volunteers_social_network_list_volunteer_id");
                                });

                            b1.Navigation("NetworksList");
                        });

                    b.OwnsOne("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.CredentialList", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("tbl_volunteers");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_tbl_volunteers_tbl_volunteers_id");

                            b1.OwnsMany("FindAnimal.Domain.VolunteerAggregate.Entities.ValueObjects.Credential", "CredentialsList", b2 =>
                                {
                                    b2.Property<Guid>("CredentialListVolunteerId")
                                        .HasColumnType("uuid")
                                        .HasColumnName("credential_list_volunteer_id");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasColumnName("id");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasMaxLength(500)
                                        .HasColumnType("character varying(500)")
                                        .HasColumnName("description");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)")
                                        .HasColumnName("title");

                                    b2.HasKey("CredentialListVolunteerId", "Id")
                                        .HasName("pk_tbl_volunteers_credentials_list");

                                    b2.ToTable("tbl_volunteers_credentials_list", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("CredentialListVolunteerId")
                                        .HasConstraintName("fk_tbl_volunteers_credentials_list_tbl_volunteers_credential_l");
                                });

                            b1.Navigation("CredentialsList");
                        });

                    b.Navigation("Credentials")
                        .IsRequired();

                    b.Navigation("SocialNetworks")
                        .IsRequired();
                });

            modelBuilder.Entity("FindAnimal.Domain.SpeciesAggregate.Entities.Species", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Pet", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("FindAnimal.Domain.VolunteerAggregate.Entities.Volunteer", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
